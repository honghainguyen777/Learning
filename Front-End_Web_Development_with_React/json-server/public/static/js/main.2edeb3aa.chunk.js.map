{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/Forms.js","App.js","redux/configureStore.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","key","id","to","width","Menu","menu","dishes","map","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","About","RenderLeaders","leaders","list","tag","left","object","body","heading","title","RenderDish","top","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","state","isModalOpen","toggleModal","setState","rating","outline","onClick","isOpen","toggle","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","addLeaders","leadersFailed","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","addComment","catch","console","log","feedback","Feedback","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2edeb3aa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = \"http://localhost:3001/\";","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardSubtitle, CardTitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <FadeTransform in\r\n                transformProps=\r\n                {{exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }  \r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish}\r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                        isLoading={props.promosLoading}\r\n                        errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                        isLoading={props.leadersLoading}\r\n                        errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish }) {\r\n    return(\r\n        <Card key={dish.id} >\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = props => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home' >Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !(val) || (val.length <= len);\r\nconst minLength = len => val => (val) && (val.length >= len);\r\nconst isNumber = val => !isNaN(Number(val));\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z9-9.-]+\\.[A-Z]{2,4}$/i.test(val)\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home' >Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            777, Earth<br />\r\n                            Solar System<br />\r\n                            Miky Way Galaxy<br />\r\n                            <i className=\"fa fa-phone\"></i>: +123 456 789<br />\r\n                            <i className=\"fa fa-fax\"></i>: +123 456 789<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:contact@pizza4all.net\">contact@pizza4all.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"skype:xxxx?add\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(2), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(2), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" \r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(5), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 5 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" \r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '} <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" \r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nfunction About(props) {\r\n    // render the leaders information, if we do isLoading for the entire About component,\r\n    // we will get a trouble if the errMess is throwed --> no load the About us part (that already provided without fetching for server's data)\r\n    // therefore, we have to do fetching handling only in the Corporate Leadership (Leaders rendering) part only\r\n    function RenderLeaders({leaders}) {\r\n\r\n        if (leaders.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (leaders.errMess) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{leaders.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"col-12 mt-5\">\r\n                    <Media list>\r\n                        <Stagger in>\r\n                            {leaders.leaders.map((leader) => {\r\n                                return (\r\n                                    <Fade in key={leader.id}>\r\n                                        <Media tag='li'>\r\n                                            <Media left>\r\n                                                <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                                            </Media>\r\n                                            <Media body className=\"ml-5\">\r\n                                                <Media heading>{leader.name}</Media>\r\n                                                <p>{leader.designation}</p>\r\n                                                <p>{leader.description}</p>\r\n                                            </Media>\r\n                                        </Media>\r\n                                    </Fade>\r\n                                );\r\n                            })}\r\n                        </Stagger>\r\n                    </Media>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    // here the provided information (Our History) will be rendered without any effects from leaders fetching\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <RenderLeaders leaders={props.leaders} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle,\r\n    Breadcrumb, BreadcrumbItem, Button, Modal,\r\n    ModalHeader, ModalBody, Row, Col, Label\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n// render a card for the selected dish\r\nfunction RenderDish({dish}) {\r\n    return (\r\n        <Card>\r\n            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n            <CardBody>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n                <CardText>{dish.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\n// render all comments for the selected dish\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    // check if comments are null\r\n    if (comments === null) {\r\n        return <div></div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <h4>Comments Here</h4>\r\n            <ul className='list-unstyled'>\r\n                <Stagger in>\r\n                    {comments.map((comment) => {\r\n                        return (\r\n                            <Fade in>\r\n                                <li key={comment.id}>\r\n                                    <p>{comment.comment}</p>\r\n                                    <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                </li>\r\n                            </Fade>\r\n                        );\r\n                    })}\r\n                </Stagger>\r\n            </ul>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </div>\r\n    );\r\n}\r\n\r\n// validation\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !(val) || (val.length <= len);\r\nconst minLength = len => val => (val) && (val.length >= len)\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                                <Col md={10}>\r\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={2}>Your Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".author\" id=\"author\" className=\"form-control\"\r\n                                        name=\"author\" placeholder=\"Your name\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\" show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required. ',\r\n                                            minLength: \"Must be greater than 5 characters. \",\r\n                                            maxLength: \"Must be less than or equal to 15 characters.\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\" className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu' >Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <FadeTransform in\r\n                            transformProps=\r\n                            {{exitTransform: 'scale(0.5) translateY(-50%)'\r\n                        }}>\r\n                            <RenderDish dish={props.dish} />\r\n                        </FadeTransform>\r\n                    </div>\r\n                    <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <div></div>;\r\n    }\r\n};\r\n\r\nexport default DishDetail;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler,\r\n    Collapse, NavItem, Jumbotron, Button, Modal,\r\n    ModalHeader, ModalBody, Form, FormGroup, Input, Label\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" \r\n            + this.password.value + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        // <></> is a short version <React.Fragment></React.Fragment>\r\n        // but some browsers do not regconize\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Pizza4All\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span>Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Pizza4All</h1>\r\n                                <p>Eat Pizzas, Love Pizzas. Pizzas bring people together, create happy emotion. Look at people on the street who are holding this Pizza4All! They are laughing. It is why Pizza4All is a good taste of peope's lives</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={input => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={input => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={input => this.remember = input} /> Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              777, Earth<br />\r\n\t\t              Solar System<br />\r\n\t\t              Miky Way Galaxy<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +123 456 789<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +123 456 789<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:contact@pizza4all.net\">\r\n                         contact@pizza4all.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2020 Pizza4All</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n\r\n    newComment.date = new Date().toISOString();\r\n    // without method, the fetch will be a GET\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response\r\n        } else {\r\n            // get response but error\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        // doesn't get any response\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { console.log('Post comments', error.message);\r\n        alert('Your comment could not be posted\\nError: '+ error.message);\r\n    })\r\n};\r\n\r\n// post feedback to the json server\r\nexport const postFeedback = Feedback => dispatch => {\r\n    // Feedback is not extensible -> clone a newFeedback and add date to it\r\n    const newFeedback = {...Feedback, date: new Date().toISOString()};\r\n    \r\n    // fetch and post to json server\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => alert('Thank you for your feedback!\\n' + JSON.stringify(response)))\r\n    .catch(error => { console.log('Post feedback ', error.message);\r\n        alert('Your feedback could not be posted\\nError: ' + error.message);\r\n    })\r\n};\r\n\r\n// handle fetching Dishes from json server\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            } else {\r\n                // get response but error\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            // doesn't get any response\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n// handle fetching Comments from json server\r\nexport const fetchComments = () => (dispatch) => {\r\n\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            } else {\r\n                // get response but error\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            // doesn't get any response\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n// handle fetching Promotions from json server\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            } else {\r\n                // get response but error\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            // doesn't get any response\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\n// handle fetching Leaders from json server\r\nexport const fetchLeaders = () => dispatch => {\r\n\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            } else {\r\n                var error = new Error('Error' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const addLeaders = leaders => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const leadersFailed = errmess => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n})","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED'","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\n// Animation\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    postFeedback: (feedback) => dispatch(postFeedback(feedback)),\r\n    fetchDishes: () => { dispatch(fetchDishes())},\r\n    // reset the feedback form when the form is submited successfully\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => { dispatch(fetchComments())},\r\n    fetchPromos: () => { dispatch(fetchPromos())},\r\n    fetchLeaders: () => { dispatch(fetchLeaders())}\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n      }\r\n\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return(\r\n                <Home \r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promosLoading={this.props.promotions.isLoading}\r\n                    promosErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leadersLoading={this.props.leaders.isLoading}\r\n                    leadersErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n          }\r\n\r\n        // route will give 3 properties: match, history, location\r\n        // match contains params /:dishId\r\n        const DishWithId = ({match}) => {\r\n            return(\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n                  isLoading={this.props.dishes.isLoading}\r\n                  errMess={this.props.dishes.errMess}\r\n                  comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                  commentsErrMess={this.props.comments.errMess}\r\n                  postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n\r\n        return (\r\n        <div>\r\n            <Header />\r\n            <TransitionGroup>\r\n                <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                    <Switch>\r\n                        <Route path=\"/home\" component={HomePage} />\r\n                        <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} /> } />\r\n                        <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                        <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                        <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders}/> } />\r\n                        <Redirect to=\"/home\" />\r\n                    </Switch>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n            <Footer />\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n// withRouter to use with Router\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes:[]\r\n    },action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions:[]\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []}\r\n        default:\r\n            return state;\r\n    }\r\n};","// this creation to keep the feedback from save when use go to another route\r\n\r\nexport const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './Forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            //// this creation to keep the feedback from save when use go to another route\r\n            ...createForms({\r\n               feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}